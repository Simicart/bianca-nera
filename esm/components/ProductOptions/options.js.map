{"version":3,"sources":["../../../src/components/ProductOptions/options.js"],"names":["React","Component","func","object","isProductConfigurable","Option","Options","optionId","selection","onSelectionChange","props","render","handleSelectionChange","product","configurable_options","map","option","attribute_id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,YAA7B;AAEA,OAAOC,qBAAP;AAEA,OAAOC,MAAP;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mDAMJ,CAACM,QAAD,EAAWC,SAAX,KAAyB;AAC7C,YAAM;AAAEC,QAAAA;AAAF,UAAwB,KAAKC,KAAnC;;AAEA,UAAID,iBAAJ,EAAuB;AACnBA,QAAAA,iBAAiB,CAACF,QAAD,EAAWC,SAAX,CAAjB;AACH;AACJ,KAZ2B;AAAA;;AAc5BG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,qBAAF;AAAyBF,MAAAA;AAAzB,QAAmC,IAAzC;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAcH,KAApB;;AAEA,QAAI,CAACN,qBAAqB,CAACS,OAAD,CAA1B,EAAqC;AACjC;AACA,aAAO,IAAP;AACH;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAA2BD,OAAjC;AACA,WAAOC,oBAAoB,CAACC,GAArB,CAAyBC,MAAM,IAClC,oBAAC,MAAD,eACQA,MADR;AAEI,MAAA,GAAG,EAAEA,MAAM,CAACC,YAFhB;AAGI,MAAA,iBAAiB,EAAEL;AAHvB,OADG,CAAP;AAOH;;AA/B2B;;gBAA1BN,O,eACiB;AACfG,EAAAA,iBAAiB,EAAEP,IADJ;AAEfW,EAAAA,OAAO,EAAEV;AAFM,C;;AAiCvB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { func, object } from 'prop-types';\n\nimport isProductConfigurable from 'src/util/isProductConfigurable';\n\nimport Option from './option';\n\nclass Options extends Component {\n    static propTypes = {\n        onSelectionChange: func,\n        product: object\n    };\n\n    handleSelectionChange = (optionId, selection) => {\n        const { onSelectionChange } = this.props;\n\n        if (onSelectionChange) {\n            onSelectionChange(optionId, selection);\n        }\n    };\n\n    render() {\n        const { handleSelectionChange, props } = this;\n        const { product } = props;\n\n        if (!isProductConfigurable(product)) {\n            // Non-configurable products don't have options.\n            return null;\n        }\n\n        const { configurable_options } = product;\n        return configurable_options.map(option => (\n            <Option\n                {...option}\n                key={option.attribute_id}\n                onSelectionChange={handleSelectionChange}\n            />\n        ));\n    }\n}\n\nexport default Options;\n"],"file":"options.js"}