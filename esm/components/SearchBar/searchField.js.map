{"version":3,"sources":["../../../src/components/SearchBar/searchField.js"],"names":["React","useCallback","func","shape","string","useFieldState","useFormApi","ClearIcon","SearchIcon","useSearchParam","Icon","TextInput","Trigger","clearIcon","searchIcon","SearchField","props","location","onChange","onFocus","value","formApi","setValue","queryValue","parameter","resetForm","reset","resetButton","propTypes","search","isRequired"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,YAApC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,UAA1C;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,OAAOC,IAAP;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AAEA,MAAMC,SAAS,GAAG,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEN,SAAX;AAAsB,EAAA,IAAI,EAAE;AAA5B,EAAlB;AACA,MAAMO,UAAU,GAAG,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEN,UAAX;AAAuB,EAAA,IAAI,EAAE;AAA7B,EAAnB;;AAEA,MAAMO,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAkCH,KAAxC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYf,aAAa,CAAC,cAAD,CAA/B;AACA,QAAMgB,OAAO,GAAGf,UAAU,EAA1B;AAEA,QAAMgB,QAAQ,GAAGrB,WAAW,CACxBsB,UAAU,IAAI;AACV;AACA,QAAIA,UAAJ,EAAgB;AACZF,MAAAA,OAAO,CAACC,QAAR,CAAiB,cAAjB,EAAiCC,UAAjC;AACH,KAJS,CAMV;;;AACA,QAAI,OAAOL,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAXuB,EAYxB,CAACG,OAAD,EAAUH,QAAV,CAZwB,CAA5B;AAeAT,EAAAA,cAAc,CAAC;AAAEQ,IAAAA,QAAF;AAAYO,IAAAA,SAAS,EAAE,OAAvB;AAAgCF,IAAAA;AAAhC,GAAD,CAAd;AAEA,QAAMG,SAAS,GAAGxB,WAAW,CAAC,MAAM;AAChCoB,IAAAA,OAAO,CAACK,KAAR;AACH,GAF4B,EAE1B,CAACL,OAAD,CAF0B,CAA7B;AAIA,QAAMM,WAAW,GAAGP,KAAK,GACrB,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEK;AAAjB,KAA6BZ,SAA7B,CADqB,GAErB,IAFJ;AAIA,SACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEc,WADX;AAEI,IAAA,MAAM,EAAEb,UAFZ;AAGI,IAAA,KAAK,EAAC,cAHV;AAII,IAAA,OAAO,EAAEK,OAJb;AAKI,IAAA,aAAa,EAAED;AALnB,IADJ;AASH,CAvCD;;AAyCA,eAAeH,WAAf;AAEAA,WAAW,CAACa,SAAZ,GAAwB;AACpBX,EAAAA,QAAQ,EAAEd,KAAK,CAAC;AACZ0B,IAAAA,MAAM,EAAEzB;AADI,GAAD,CAAL,CAEP0B,UAHiB;AAIpBZ,EAAAA,QAAQ,EAAEhB,IAJU;AAKpBiB,EAAAA,OAAO,EAAEjB;AALW,CAAxB","sourcesContent":["import React, { useCallback } from 'react';\nimport { func, shape, string } from 'prop-types';\nimport { useFieldState, useFormApi } from 'informed';\nimport ClearIcon from 'react-feather/dist/icons/x';\nimport SearchIcon from 'react-feather/dist/icons/search';\nimport { useSearchParam } from '@magento/peregrine';\n\nimport Icon from 'src/components/Icon';\nimport TextInput from 'src/components/TextInput';\nimport Trigger from 'src/components/Trigger';\n\nconst clearIcon = <Icon src={ClearIcon} size={18} />;\nconst searchIcon = <Icon src={SearchIcon} size={18} />;\n\nconst SearchField = props => {\n    const { location, onChange, onFocus } = props;\n    const { value } = useFieldState('search_query');\n    const formApi = useFormApi();\n\n    const setValue = useCallback(\n        queryValue => {\n            // update search field\n            if (queryValue) {\n                formApi.setValue('search_query', queryValue);\n            }\n\n            // trigger the effects of clearing the field\n            if (typeof onChange === 'function') {\n                onChange('');\n            }\n        },\n        [formApi, onChange]\n    );\n\n    useSearchParam({ location, parameter: 'query', setValue });\n\n    const resetForm = useCallback(() => {\n        formApi.reset();\n    }, [formApi]);\n\n    const resetButton = value ? (\n        <Trigger action={resetForm}>{clearIcon}</Trigger>\n    ) : null;\n\n    return (\n        <TextInput\n            after={resetButton}\n            before={searchIcon}\n            field=\"search_query\"\n            onFocus={onFocus}\n            onValueChange={onChange}\n        />\n    );\n};\n\nexport default SearchField;\n\nSearchField.propTypes = {\n    location: shape({\n        search: string\n    }).isRequired,\n    onChange: func,\n    onFocus: func\n};\n"],"file":"searchField.js"}