{"version":3,"sources":["../../../src/components/SearchBar/suggestedCategories.js"],"names":["React","useCallback","arrayOf","func","number","shape","string","Link","mergeClasses","getLocation","defaultClasses","SuggestedCategories","props","categories","limit","onNavigate","value","classes","handleClick","items","slice","map","label","value_string","categoryId","item","link","root","defaultProps","propTypes","isRequired"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,MAAvC,QAAqD,YAArD;AACA,SAASC,IAAT;AAEA,SAASC,YAAT;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACjC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA;AAAjC,MAA2CJ,KAAjD;AACA,QAAMK,OAAO,GAAGT,YAAY,CAACE,cAAD,EAAiBE,KAAK,CAACK,OAAvB,CAA5B;AAEA,QAAMC,WAAW,GAAGjB,WAAW,CAAC,MAAM;AAClC,QAAI,OAAOc,UAAP,KAAsB,UAA1B,EAAsC;AAClCA,MAAAA,UAAU;AACb;AACJ,GAJ8B,EAI5B,CAACA,UAAD,CAJ4B,CAA/B;AAMA,QAAMI,KAAK,GAAGN,UAAU,CACnBO,KADS,CACH,CADG,EACAN,KADA,EAETO,GAFS,CAEL,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAY,EAAEC;AAAvB,GAAD,KACD;AAAI,IAAA,GAAG,EAAEA,UAAT;AAAqB,IAAA,SAAS,EAAEP,OAAO,CAACQ;AAAxC,KACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAER,OAAO,CAACS,IADvB;AAEI,IAAA,EAAE,EAAEjB,WAAW,CAACO,KAAD,EAAQQ,UAAR,CAFnB;AAGI,IAAA,OAAO,EAAEN;AAHb,KAKI;AAAQ,IAAA,SAAS,EAAED,OAAO,CAACD;AAA3B,KAAmCA,KAAnC,CALJ,EAMI,kCAAQ,OAAMM,KAAM,EAApB,CANJ,CADJ,CAHM,CAAd;AAeA,SAAO;AAAI,IAAA,SAAS,EAAEL,OAAO,CAACU;AAAvB,KAA8BR,KAA9B,CAAP;AACH,CA1BD;;AA4BA,eAAeR,mBAAf;AAEAA,mBAAmB,CAACiB,YAApB,GAAmC;AAC/Bd,EAAAA,KAAK,EAAE;AADwB,CAAnC;AAIAH,mBAAmB,CAACkB,SAApB,GAAgC;AAC5BhB,EAAAA,UAAU,EAAEX,OAAO,CACfG,KAAK,CAAC;AACFiB,IAAAA,KAAK,EAAEhB,MAAM,CAACwB,UADZ;AAEFP,IAAAA,YAAY,EAAEjB,MAAM,CAACwB;AAFnB,GAAD,CADU,CAAP,CAKVA,UAN0B;AAO5Bb,EAAAA,OAAO,EAAEZ,KAAK,CAAC;AACXoB,IAAAA,IAAI,EAAEnB,MADK;AAEXoB,IAAAA,IAAI,EAAEpB,MAFK;AAGXqB,IAAAA,IAAI,EAAErB,MAHK;AAIXU,IAAAA,KAAK,EAAEV;AAJI,GAAD,CAPc;AAa5BQ,EAAAA,KAAK,EAAEV,MAAM,CAAC0B,UAbc;AAc5Bf,EAAAA,UAAU,EAAEZ,IAdgB;AAe5Ba,EAAAA,KAAK,EAAEV;AAfqB,CAAhC","sourcesContent":["import React, { useCallback } from 'react';\nimport { arrayOf, func, number, shape, string } from 'prop-types';\nimport { Link } from 'src/drivers';\n\nimport { mergeClasses } from 'src/classify';\nimport getLocation from './getLocation';\nimport defaultClasses from './suggestedCategories.css';\n\nconst SuggestedCategories = props => {\n    const { categories, limit, onNavigate, value } = props;\n    const classes = mergeClasses(defaultClasses, props.classes);\n\n    const handleClick = useCallback(() => {\n        if (typeof onNavigate === 'function') {\n            onNavigate();\n        }\n    }, [onNavigate]);\n\n    const items = categories\n        .slice(0, limit)\n        .map(({ label, value_string: categoryId }) => (\n            <li key={categoryId} className={classes.item}>\n                <Link\n                    className={classes.link}\n                    to={getLocation(value, categoryId)}\n                    onClick={handleClick}\n                >\n                    <strong className={classes.value}>{value}</strong>\n                    <span>{` in ${label}`}</span>\n                </Link>\n            </li>\n        ));\n\n    return <ul className={classes.root}>{items}</ul>;\n};\n\nexport default SuggestedCategories;\n\nSuggestedCategories.defaultProps = {\n    limit: 4\n};\n\nSuggestedCategories.propTypes = {\n    categories: arrayOf(\n        shape({\n            label: string.isRequired,\n            value_string: string.isRequired\n        })\n    ).isRequired,\n    classes: shape({\n        item: string,\n        link: string,\n        root: string,\n        value: string\n    }),\n    limit: number.isRequired,\n    onNavigate: func,\n    value: string\n};\n"],"file":"suggestedCategories.js"}