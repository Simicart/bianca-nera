{"version":3,"sources":["../../../../src/components/Checkout/Receipt/receipt.js"],"names":["React","Fragment","useCallback","useEffect","bool","func","shape","string","mergeClasses","Button","defaultClasses","Receipt","props","createAccount","history","order","reset","user","classes","handleCreateAccount","handleViewOrderDetails","root","body","header","textBlock","isSignedIn","propTypes","footer","id","isRequired","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,SAASC,YAAT;AACA,OAAOC,MAAP;AACA,OAAOC,cAAP;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA;AAAxC,MAAiDL,KAAvD;AAEA,QAAMM,OAAO,GAAGV,YAAY,CAACE,cAAD,EAAiBE,KAAK,CAACM,OAAvB,CAA5B;AAEAf,EAAAA,SAAS,CAAC,MAAMa,KAAP,EAAc,CAACA,KAAD,CAAd,CAAT;AAEA,QAAMG,mBAAmB,GAAGjB,WAAW,CAAC,MAAM;AAC1CW,IAAAA,aAAa,CAACC,OAAD,CAAb;AACH,GAFsC,EAEpC,CAACD,aAAD,EAAgBC,OAAhB,CAFoC,CAAvC;AAIA,QAAMM,sBAAsB,GAAGlB,WAAW,CAAC,MAAM,CAC7C;AACH,GAFyC,EAEvC,CAACa,KAAD,CAFuC,CAA1C;AAIA,SACI;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACG;AAAxB,KACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI;AAAxB,KACI;AAAI,IAAA,SAAS,EAAEJ,OAAO,CAACK;AAAvB,oCADJ,EAEI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACM;AAAxB,yFAFJ,EAMKP,IAAI,CAACQ,UAAL,GACG,oBAAC,QAAD,QACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACM;AAAxB,kEADJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ;AAAjB,0BALJ,CADH,GAWG,oBAAC,QAAD,QACI,+BADJ,EAEI;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACM;AAAxB,qFAFJ,EAMI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,MAAjB;AAAwB,IAAA,OAAO,EAAEL;AAAjC,yBANJ,CAjBR,CADJ,CADJ;AAiCH,CAhDD;;AAkDAR,OAAO,CAACe,SAAR,GAAoB;AAChBR,EAAAA,OAAO,EAAEZ,KAAK,CAAC;AACXgB,IAAAA,IAAI,EAAEf,MADK;AAEXoB,IAAAA,MAAM,EAAEpB,MAFG;AAGXc,IAAAA,IAAI,EAAEd;AAHK,GAAD,CADE;AAMhBQ,EAAAA,KAAK,EAAET,KAAK,CAAC;AACTsB,IAAAA,EAAE,EAAErB;AADK,GAAD,CAAL,CAEJsB,UARa;AAShBhB,EAAAA,aAAa,EAAER,IAAI,CAACwB,UATJ;AAUhBb,EAAAA,KAAK,EAAEX,IAAI,CAACwB,UAVI;AAWhBZ,EAAAA,IAAI,EAAEX,KAAK,CAAC;AACRmB,IAAAA,UAAU,EAAErB;AADJ,GAAD;AAXK,CAApB;AAgBAO,OAAO,CAACmB,YAAR,GAAuB;AACnBf,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,KAAK,EAAE,MAAM,CAAE,CAFI;AAGnBH,EAAAA,aAAa,EAAE,MAAM,CAAE;AAHJ,CAAvB;AAMA,eAAeF,OAAf","sourcesContent":["import React, { Fragment, useCallback, useEffect } from 'react';\nimport { bool, func, shape, string } from 'prop-types';\nimport { mergeClasses } from 'src/classify';\nimport Button from 'src/components/Button';\nimport defaultClasses from './receipt.css';\n\nconst Receipt = props => {\n    const { createAccount, history, order, reset, user } = props;\n\n    const classes = mergeClasses(defaultClasses, props.classes);\n\n    useEffect(() => reset, [reset]);\n\n    const handleCreateAccount = useCallback(() => {\n        createAccount(history);\n    }, [createAccount, history]);\n\n    const handleViewOrderDetails = useCallback(() => {\n        // TODO: Implement/connect/redirect to order details page.\n    }, [order]);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.body}>\n                <h2 className={classes.header}>Thank you for your purchase!</h2>\n                <div className={classes.textBlock}>\n                    You will receive an order confirmation email with order\n                    status and other details.\n                </div>\n                {user.isSignedIn ? (\n                    <Fragment>\n                        <div className={classes.textBlock}>\n                            You can also visit your account page for more\n                            information.\n                        </div>\n                        <Button onClick={handleViewOrderDetails}>\n                            View Order Details\n                        </Button>\n                    </Fragment>\n                ) : (\n                    <Fragment>\n                        <hr />\n                        <div className={classes.textBlock}>\n                            Track order status and earn rewards for your\n                            purchase by creating an account.\n                        </div>\n                        <Button priority=\"high\" onClick={handleCreateAccount}>\n                            Create an Account\n                        </Button>\n                    </Fragment>\n                )}\n            </div>\n        </div>\n    );\n};\n\nReceipt.propTypes = {\n    classes: shape({\n        body: string,\n        footer: string,\n        root: string\n    }),\n    order: shape({\n        id: string\n    }).isRequired,\n    createAccount: func.isRequired,\n    reset: func.isRequired,\n    user: shape({\n        isSignedIn: bool\n    })\n};\n\nReceipt.defaultProps = {\n    order: {},\n    reset: () => {},\n    createAccount: () => {}\n};\n\nexport default Receipt;\n"],"file":"receipt.js"}