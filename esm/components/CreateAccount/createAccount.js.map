{"version":3,"sources":["../../../src/components/CreateAccount/createAccount.js"],"names":["React","Component","func","shape","string","Form","classify","Button","Checkbox","Field","TextInput","combine","validateEmail","isRequired","validatePassword","validateConfirmPassword","hasLengthAtLeast","defaultClasses","CreateAccount","values","onSubmit","props","errorMessage","createAccountError","errorIsEmpty","Object","keys","length","initialValues","email","firstName","lastName","rest","customer","firstname","lastname","render","handleSubmit","classes","root","lead","subscribe","error","actions","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { func, shape, string } from 'prop-types';\nimport { Form } from 'informed';\n\nimport classify from 'src/classify';\nimport Button from 'src/components/Button';\nimport Checkbox from 'src/components/Checkbox';\nimport Field from 'src/components/Field';\nimport TextInput from 'src/components/TextInput';\n\nimport combine from 'src/util/combineValidators';\nimport {\n    validateEmail,\n    isRequired,\n    validatePassword,\n    validateConfirmPassword,\n    hasLengthAtLeast\n} from 'src/util/formValidators';\n\nimport defaultClasses from './createAccount.css';\n\nclass CreateAccount extends Component {\n    static propTypes = {\n        classes: shape({\n            actions: string,\n            error: string,\n            lead: string,\n            root: string,\n            subscribe: string\n        }),\n        createAccountError: shape({\n            message: string\n        }),\n        initialValues: shape({\n            email: string,\n            firstName: string,\n            lastName: string\n        }),\n        onSubmit: func\n    };\n\n    static defaultProps = {\n        initialValues: {}\n    };\n\n    get errorMessage() {\n        const { createAccountError } = this.props;\n\n        if (createAccountError) {\n            const errorIsEmpty = Object.keys(createAccountError).length === 0;\n            if (!errorIsEmpty) {\n                return 'An error occurred. Please try again.';\n            }\n        }\n    }\n\n    get initialValues() {\n        const { initialValues } = this.props;\n        const { email, firstName, lastName, ...rest } = initialValues;\n\n        return {\n            customer: { email, firstname: firstName, lastname: lastName },\n            ...rest\n        };\n    }\n\n    handleSubmit = values => {\n        const { onSubmit } = this.props;\n\n        if (typeof onSubmit === 'function') {\n            onSubmit(values);\n        }\n    };\n\n    render() {\n        const { errorMessage, handleSubmit, initialValues, props } = this;\n        const { classes } = props;\n\n        return (\n            <Form\n                className={classes.root}\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n            >\n                <h3 className={classes.lead}>\n                    {`Check out faster, use multiple addresses, track\n                         orders and more by creating an account!`}\n                </h3>\n                <Field label=\"First Name\" required={true}>\n                    <TextInput\n                        field=\"customer.firstname\"\n                        autoComplete=\"given-name\"\n                        validate={isRequired}\n                        validateOnBlur\n                    />\n                </Field>\n                <Field label=\"Last Name\" required={true}>\n                    <TextInput\n                        field=\"customer.lastname\"\n                        autoComplete=\"family-name\"\n                        validate={isRequired}\n                        validateOnBlur\n                    />\n                </Field>\n                <Field label=\"Email\" required={true}>\n                    <TextInput\n                        field=\"customer.email\"\n                        autoComplete=\"email\"\n                        validate={combine([isRequired, validateEmail])}\n                        validateOnBlur\n                    />\n                </Field>\n                <Field label=\"Password\" required={true}>\n                    <TextInput\n                        field=\"password\"\n                        type=\"password\"\n                        autoComplete=\"new-password\"\n                        validate={combine([\n                            isRequired,\n                            [hasLengthAtLeast, 8],\n                            validatePassword\n                        ])}\n                        validateOnBlur\n                    />\n                </Field>\n                <Field label=\"Confirm Password\" required={true}>\n                    <TextInput\n                        field=\"confirm\"\n                        type=\"password\"\n                        validate={combine([\n                            isRequired,\n                            validateConfirmPassword\n                        ])}\n                        validateOnBlur\n                    />\n                </Field>\n                <div className={classes.subscribe}>\n                    <Checkbox\n                        field=\"subscribe\"\n                        label=\"Subscribe to news and updates\"\n                    />\n                </div>\n                <div className={classes.error}>{errorMessage}</div>\n                <div className={classes.actions}>\n                    <Button type=\"submit\" priority=\"high\">\n                        {'Submit'}\n                    </Button>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(CreateAccount);\n"],"file":"createAccount.js"}