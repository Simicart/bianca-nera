{"version":3,"sources":["../../../src/RootComponents/Category/category.js"],"names":["React","useEffect","string","number","shape","usePagination","useQuery","mergeClasses","categoryQuery","CategoryContent","loadingIndicator","defaultClasses","Category","props","id","pageSize","paginationValues","paginationApi","currentPage","totalPages","setCurrentPage","setTotalPages","pageControl","setPage","updateTotalPages","queryResult","queryApi","data","error","loading","runQuery","setLoading","classes","variables","Number","onServer","window","scrollTo","left","top","behavior","totalPagesFromData","category","products","page_info","total_pages","propTypes","gallery","root","title","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAsC,YAAtC;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,oBAAxC;AAEA,SAASC,YAAT;AACA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,SAASC,gBAAT;AACA,OAAOC,cAAP;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAmBF,KAAzB;AAEA,QAAM,CAACG,gBAAD,EAAmBC,aAAnB,IAAoCZ,aAAa,EAAvD;AACA,QAAM;AAAEa,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA8BH,gBAApC;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAoCJ,aAA1C;AAEA,QAAMK,WAAW,GAAG;AAChBJ,IAAAA,WADgB;AAEhBK,IAAAA,OAAO,EAAEH,cAFO;AAGhBI,IAAAA,gBAAgB,EAAEH,aAHF;AAIhBF,IAAAA;AAJgB,GAApB;AAOA,QAAM,CAACM,WAAD,EAAcC,QAAd,IAA0BpB,QAAQ,CAACE,aAAD,CAAxC;AACA,QAAM;AAAEmB,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BJ,WAAjC;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BL,QAAjC;AACA,QAAMM,OAAO,GAAGzB,YAAY,CAACI,cAAD,EAAiBE,KAAK,CAACmB,OAAvB,CAA5B;AAEA/B,EAAAA,SAAS,CAAC,MAAM;AACZ8B,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAD,IAAAA,QAAQ,CAAC;AACLG,MAAAA,SAAS,EAAE;AACPnB,QAAAA,EAAE,EAAEoB,MAAM,CAACpB,EAAD,CADH;AAEPqB,QAAAA,QAAQ,EAAE,KAFH;AAGPpB,QAAAA,QAAQ,EAAEmB,MAAM,CAACnB,QAAD,CAHT;AAIPG,QAAAA,WAAW,EAAEgB,MAAM,CAAChB,WAAD;AAJZ;AADN,KAAD,CAAR;AASAkB,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACZC,MAAAA,IAAI,EAAE,CADM;AAEZC,MAAAA,GAAG,EAAE,CAFO;AAGZC,MAAAA,QAAQ,EAAE;AAHE,KAAhB;AAKH,GAhBQ,EAgBN,CAAC1B,EAAD,EAAKC,QAAL,EAAeG,WAAf,CAhBM,CAAT;AAkBA,QAAMuB,kBAAkB,GAAGd,IAAI,GACzBA,IAAI,CAACe,QAAL,CAAcC,QAAd,CAAuBC,SAAvB,CAAiCC,WADR,GAEzB,IAFN;AAGA5C,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,aAAa,CAACoB,kBAAD,CAAb;AACH,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;AAIA,MAAIb,KAAJ,EAAW,OAAO,oDAAP,CA5CW,CA6CtB;;AACA,MAAI,CAACT,UAAL,EAAiB,OAAOT,gBAAP,CA9CK,CAgDtB;;AACA,SACI,oBAAC,eAAD;AACI,IAAA,OAAO,EAAEsB,OADb;AAEI,IAAA,WAAW,EAAEV,WAFjB;AAGI,IAAA,IAAI,EAAEO,OAAO,GAAG,IAAH,GAAUF;AAH3B,IADJ;AAOH,CAxDD;;AA0DAf,QAAQ,CAACkC,SAAT,GAAqB;AACjBhC,EAAAA,EAAE,EAAEX,MADa;AAEjB6B,EAAAA,OAAO,EAAE5B,KAAK,CAAC;AACX2C,IAAAA,OAAO,EAAE7C,MADE;AAEX8C,IAAAA,IAAI,EAAE9C,MAFK;AAGX+C,IAAAA,KAAK,EAAE/C;AAHI,GAAD,CAFG;AAOjBa,EAAAA,QAAQ,EAAEZ;AAPO,CAArB;AAUAS,QAAQ,CAACsC,YAAT,GAAwB;AACpBpC,EAAAA,EAAE,EAAE,CADgB;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAxB;AAKA,eAAeH,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { string, number, shape } from 'prop-types';\nimport { usePagination, useQuery } from '@magento/peregrine';\n\nimport { mergeClasses } from 'src/classify';\nimport categoryQuery from 'src/queries/getCategory.graphql';\nimport CategoryContent from './categoryContent';\nimport { loadingIndicator } from 'src/components/LoadingIndicator';\nimport defaultClasses from './category.css';\n\nconst Category = props => {\n    const { id, pageSize } = props;\n\n    const [paginationValues, paginationApi] = usePagination();\n    const { currentPage, totalPages } = paginationValues;\n    const { setCurrentPage, setTotalPages } = paginationApi;\n\n    const pageControl = {\n        currentPage,\n        setPage: setCurrentPage,\n        updateTotalPages: setTotalPages,\n        totalPages\n    };\n\n    const [queryResult, queryApi] = useQuery(categoryQuery);\n    const { data, error, loading } = queryResult;\n    const { runQuery, setLoading } = queryApi;\n    const classes = mergeClasses(defaultClasses, props.classes);\n\n    useEffect(() => {\n        setLoading(true);\n        runQuery({\n            variables: {\n                id: Number(id),\n                onServer: false,\n                pageSize: Number(pageSize),\n                currentPage: Number(currentPage)\n            }\n        });\n\n        window.scrollTo({\n            left: 0,\n            top: 0,\n            behavior: 'smooth'\n        });\n    }, [id, pageSize, currentPage]);\n\n    const totalPagesFromData = data\n        ? data.category.products.page_info.total_pages\n        : null;\n    useEffect(() => {\n        setTotalPages(totalPagesFromData);\n    }, [totalPagesFromData]);\n\n    if (error) return <div>Data Fetch Error</div>;\n    // show loading indicator until our data has been fetched and pagination state has been updated\n    if (!totalPages) return loadingIndicator;\n\n    // if our data is still loading, we want to reset our data state to null\n    return (\n        <CategoryContent\n            classes={classes}\n            pageControl={pageControl}\n            data={loading ? null : data}\n        />\n    );\n};\n\nCategory.propTypes = {\n    id: number,\n    classes: shape({\n        gallery: string,\n        root: string,\n        title: string\n    }),\n    pageSize: number\n};\n\nCategory.defaultProps = {\n    id: 3,\n    pageSize: 6\n};\n\nexport default Category;\n"],"file":"category.js"}