<?php

namespace Vnecoms\PdfPro\Block\Adminhtml\Template;

/**
 * Class Edit.
 *
 * @author Vnecoms team <vnecoms.com>
 */
class Edit extends \Magento\Backend\Block\Widget\Form\Container
{
    /**
     * Core registry.
     *
     * @var \Magento\Framework\Registry
     */
    protected $_coreRegistry = null;

    /**
     * template factory.
     *
     * @var \Vnecoms\PdfPro\Model\TemplateFactory
     */
    protected $_templateFactory;

    /**
     * @var string
     */
    protected $_blockGroup = 'Vnecoms_PdfPro';

    /**
     * @param \Magento\Backend\Block\Widget\Context               $context
     * @param \VnEcoms\AdvancedPdfProcessor\Model\TemplateFactory $templateFactory
     * @param \Magento\Framework\Registry                         $registry
     * @param array                                               $data
     */
    public function __construct(
        \Magento\Backend\Block\Widget\Context $context,
        \Vnecoms\PdfPro\Model\TemplateFactory $templateFactory,
        \Magento\Framework\Registry $registry,
        array $data = []
    ) {
        $this->_templateFactory = $templateFactory;
        $this->_coreRegistry = $registry;
        parent::__construct($context, $data);
    }

    /**
     */
    protected function _construct()
    {
        parent::_construct();
        $this->_objectId = 'id';
        $this->_controller = 'adminhtml_template';
        $this->_blockGroup = 'Vnecoms_PdfPro';

        $this->buttonList->update('save', 'label', __('Save Theme'));
        $this->buttonList->update('delete', 'label', __('Delete Theme'));
    }

    protected function _prepareLayout()
    {
        $this->_formScripts[] = '

        ';

        return parent::_prepareLayout(); // TODO: Change the autogenerated stub
    }

    /**
     * @return \Magento\Framework\Phrase
     */
    public function getHeaderText()
    {
        $templateData = $this->_coreRegistry->registry('template_data');
        if ($templateData && $templateData->getId()) {
            return __('Edit Theme #%1', $this->escapeHtml($templateData->getName()));
        } else {
            return __('New Theme');
        }
    }
}
